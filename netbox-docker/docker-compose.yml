version: '3.4'
services:
  netbox-node1: &netbox-node1
    image: netboxcommunity/netbox:v2.10
    deploy:
      placement:
        constraints: [node.hostname == node1]
    depends_on:
    - pgpool-node1
    - redis-sentinel-node1
    - redis-sentinel-cache-node1
    - netbox-wk-node1
    env_file: env/netbox.env
    user: '101'
    volumes:
    - ./startup_scripts:/opt/netbox/startup_scripts:z,ro
    - ./initializers:/opt/netbox/initializers:z,ro
    - ./configuration:/etc/netbox/config:z,ro
    - ./reports:/etc/netbox/reports:z,ro
    - ./scripts:/etc/netbox/scripts:z,ro
    - netbox-media-files:/opt/netbox/netbox/media:z
    - netbox-config:/etc/netbox:z
    - netbox-static:/opt/netbox/netbox/static/:z
    ports:
    - "8080"
  netbox-wk-node1:
    <<: *netbox-node1
    depends_on:
    - redis-node1
    - redis-node2
    - redis-node3
    entrypoint:
    - /opt/netbox/venv/bin/python
    - /opt/netbox/netbox/manage.py
    command:
    - rqworker
    ports: []
  netbox-node2: &netbox-node2
    image: netboxcommunity/netbox:v2.10
    deploy:
      placement:
        constraints: [node.hostname == node2]
    depends_on:
    - pgpool-node2
    - redis-sentinel-node2
    - redis-sentinel-cache-node2
    - netbox-wk-node2
    env_file: env/netbox1.env
    user: '101'
    volumes:
    - ./startup_scripts:/opt/netbox/startup_scripts:z,ro
    - ./initializers:/opt/netbox/initializers:z,ro
    - ./configuration:/etc/netbox/config:z,ro
    - ./reports:/etc/netbox/reports:z,ro
    - ./scripts:/etc/netbox/scripts:z,ro
    - netbox-media-files:/opt/netbox/netbox/media:z
    - netbox-config:/etc/netbox:z
    - netbox-static:/opt/netbox/netbox/static/:z
    ports:
    - "8080"
  netbox-wk-node2:
    <<: *netbox-node2
    depends_on:
    - redis-node1
    - redis-node2
    - redis-node3
    entrypoint:
    - /opt/netbox/venv/bin/python
    - /opt/netbox/netbox/manage.py
    command:
    - rqworker
    ports: []
  netbox-node3: &netbox-node3
    image: netboxcommunity/netbox:v2.10
    deploy:
      placement:
        constraints: [node.hostname == node3]
    depends_on:
    - pgpool-node3
    - redis-sentinel-node3
    - redis-sentinel-cache-node3
    - netbox-wk-node3
    env_file: env/netbox2.env
    user: '101'
    volumes:
    - ./startup_scripts:/opt/netbox/startup_scripts:z,ro
    - ./initializers:/opt/netbox/initializers:z,ro
    - ./configuration:/etc/netbox/config:z,ro
    - ./reports:/etc/netbox/reports:z,ro
    - ./scripts:/etc/netbox/scripts:z,ro
    - netbox-media-files:/opt/netbox/netbox/media:z
    - netbox-config:/etc/netbox:z
    - netbox-static:/opt/netbox/netbox/static/:z
    ports:
    - "8080"
  netbox-wk-node3:
    <<: *netbox-node3
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
    entrypoint:
    - /opt/netbox/venv/bin/python
    - /opt/netbox/netbox/manage.py
    command:
    - rqworker
    ports: []
  # postgres
  pg-node1:
    image: docker.io/bitnami/postgresql-repmgr:13
    deploy:
      placement:
        constraints: [node.hostname == node1]
    ports:
      - 5435:5432
    volumes:
      - pg_1_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=StrongPass@123
      - POSTGRESQL_USERNAME=customuser
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=netbox
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-node1
      - REPMGR_PARTNER_NODES=pg-node1,pg-node2,pg-node3
      - REPMGR_NODE_NAME=pg-node1
      - REPMGR_NODE_NETWORK_NAME=pg-node1
  pg-node2:
    image: docker.io/bitnami/postgresql-repmgr:13
    deploy:
      placement:
        constraints: [node.hostname == node2]
    ports:
      - 5436:5432
    volumes:
      - pg_2_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=StrongPass@123
      - POSTGRESQL_USERNAME=customuser
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=netbox
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-node1
      - REPMGR_PARTNER_NODES=pg-node1,pg-node2,pg-node3
      - REPMGR_NODE_NAME=pg-node2
      - REPMGR_NODE_NETWORK_NAME=pg-node2
  pg-node3:
    image: docker.io/bitnami/postgresql-repmgr:13
    deploy:
      placement:
        constraints: [node.hostname == node3]
    ports:
      - 5437:5432
    volumes:
      - pg_3_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=StrongPass@123
      - POSTGRESQL_USERNAME=customuser
      - POSTGRESQL_PASSWORD=custompassword
      - POSTGRESQL_DATABASE=netbox
      - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-node1
      - REPMGR_PARTNER_NODES=pg-node1,pg-node2,pg-node3
      - REPMGR_NODE_NAME=pg-node3
      - REPMGR_NODE_NETWORK_NAME=pg-node3
  pgpool-node1:
    image: docker.io/bitnami/pgpool:4
    deploy:
      placement:
        constraints: [node.hostname == node1]
    ports:
      - 5432:5432
    depends_on:
      - pg-node1
      - pg-node2
      - pg-node3
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-node1:5432,1:pg-node2:5432,2:pg-node3:5432
      - PGPOOL_SR_CHECK_USER=customuser
      - PGPOOL_SR_CHECK_PASSWORD=custompassword
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=StrongPass@123
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=StrongPass@123
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
  pgpool-node2:
    image: docker.io/bitnami/pgpool:4
    deploy:
      placement:
        constraints: [node.hostname == node2]
    ports:
      - 5433:5432
    depends_on:
      - pg-node1
      - pg-node2
      - pg-node3
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-node1:5432,1:pg-node2:5432,2:pg-node3:5432
      - PGPOOL_SR_CHECK_USER=customuser
      - PGPOOL_SR_CHECK_PASSWORD=custompassword
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=StrongPass@123
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=StrongPass@123
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
  pgpool-node3:
    image: docker.io/bitnami/pgpool:4
    deploy:
      placement:
        constraints: [node.hostname == node3]
    ports:
      - 5434:5432
    depends_on:
      - pg-node1
      - pg-node2
      - pg-node3
    environment:
      - PGPOOL_BACKEND_NODES=0:pg-node1:5432,1:pg-node2:5432,2:pg-node3:5432
      - PGPOOL_SR_CHECK_USER=customuser
      - PGPOOL_SR_CHECK_PASSWORD=custompassword
      - PGPOOL_ENABLE_LDAP=no
      - PGPOOL_POSTGRES_USERNAME=postgres
      - PGPOOL_POSTGRES_PASSWORD=StrongPass@123
      - PGPOOL_ADMIN_USERNAME=admin
      - PGPOOL_ADMIN_PASSWORD=StrongPass@123
      - PGPOOL_ENABLE_LOAD_BALANCING=yes
    healthcheck:
      test: ["CMD", "/opt/bitnami/scripts/pgpool/healthcheck.sh"]
      interval: 10s
      timeout: 5s
      retries: 5
  # redis
  redis-node1:
    image: 'bitnami/redis:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node1]
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=StrongPass@123
    volumes:
    - netbox-redis-master-data:/bitnami/redis/data

  redis-node2:
    image: 'bitnami/redis:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node2]
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_PASSWORD=StrongPass@123
    ports:
      - '6379'
    depends_on:
      - redis-node1
    volumes:
    - netbox-redis_0-data:/bitnami/redis/data

  redis-node3:
    image: 'bitnami/redis:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node3]
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_PASSWORD=StrongPass@123
    ports:
      - '6379'
    depends_on:
      - redis-node1
    volumes:
    - netbox-redis_1-data:/bitnami/redis/data
  
  redis-sentinel-node1:
    image: 'bitnami/redis-sentinel:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node1]
    environment:
      - REDIS_MASTER_HOST=redis-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_SENTINEL_TLS_AUTH_CLIENTS=no
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
    ports:
      - '26379:26379'
  redis-sentinel-node2:
    image: 'bitnami/redis-sentinel:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node2]
    environment:
      - REDIS_MASTER_HOST=redis-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_SENTINEL_TLS_AUTH_CLIENTS=no
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
    ports:
      - '26380:26379'

  redis-sentinel-node3:
    image: 'bitnami/redis-sentinel:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node3]
    environment:
      - REDIS_MASTER_HOST=redis-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_SENTINEL_TLS_AUTH_CLIENTS=no
    depends_on:
      - redis-node1
      - redis-node2
      - redis-node3
    ports:
      - '26381:26379'
# redis cache 
  redis-cache-node1:
    image: 'bitnami/redis:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node1]
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=StrongPass@123

  redis-cache-node2:
    image: 'bitnami/redis:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node2]
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-cache-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_PASSWORD=StrongPass@123
    ports:
      - '6379'
    depends_on:
      - redis-cache-node1

  redis-cache-node3:
    image: 'bitnami/redis:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node3]
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=redis-cache-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_PASSWORD=StrongPass@123
    ports:
      - '6379'
    depends_on:
      - redis-cache-node1

  redis-sentinel-cache-node1:
    image: 'bitnami/redis-sentinel:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node1]
    environment:
      - REDIS_MASTER_HOST=redis-cache-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_SENTINEL_TLS_AUTH_CLIENTS=no
    depends_on:
      - redis-cache-node1
      - redis-cache-node2
      - redis-cache-node3
    ports:
      - '26382:26379'
  redis-sentinel-cache-node2:
    image: 'bitnami/redis-sentinel:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node2]
    environment:
      - REDIS_MASTER_HOST=redis-cache-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_SENTINEL_TLS_AUTH_CLIENTS=no
    depends_on:
      - redis-cache-node1
      - redis-cache-node2
      - redis-cache-node3
    ports:
      - '26383:26379'
  redis-sentinel-cache-node3:
    image: 'bitnami/redis-sentinel:6.2'
    deploy:
      placement:
        constraints: [node.hostname == node3]
    environment:
      - REDIS_MASTER_HOST=redis-cache-node1
      - REDIS_MASTER_PASSWORD=StrongPass@123
      - REDIS_SENTINEL_TLS_AUTH_CLIENTS=no
    depends_on:
      - redis-cache-node1
      - redis-cache-node2
      - redis-cache-node3
    ports:
      - '26384:26379'
  nginx-reverse-lb:
    image: nginx:1.20
    deploy:
      mode: global
    ports:
      - 80:80
      - 443:443
    volumes:
    - netbox-static:/opt/netbox/netbox/static/:z,ro
    - ./nginx-cert/conf.d:/etc/nginx/conf.d:z,ro
    - ./nginx-cert/ssl:/etc/nginx/ssl:z,ro

volumes:
  netbox-postgres-data:
    driver: local
  pg_3_data:
    driver: local
  pg_1_data:
    driver: local
  pg_2_data:
    driver: local
  netbox-redis-master-data:
    driver: local
  netbox-redis_0-data:
    driver: local
  netbox-redis_1-data:
    driver: local
  netbox-media-files:
    driver: local
  netbox-config:
    driver: local
  netbox-config2:
    driver: local
  netbox-static:
    driver: local